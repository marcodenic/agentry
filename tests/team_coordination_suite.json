{
  "name": "Team Coordination Test Suite",
  "description": "Tests for multi-agent team coordination and orchestration",
  "cases": [
    {
      "name": "basic_team_status",
      "input": "What is the current team status?",
      "contains": "team",
      "description": "Agent 0 should be able to report team status"
    },
    {
      "name": "spawn_coordination",
      "input": "I need to create a Python script. Spawn a coder agent to help with this task.",
      "contains": "coder",
      "description": "Agent 0 should spawn a coder agent when asked"
    },
    {
      "name": "task_delegation",
      "input": "Create a simple hello world Python script and a README file to explain it.",
      "contains": "task",
      "description": "Agent 0 should break down complex tasks and delegate to team members"
    },
    {
      "name": "team_communication",
      "input": "Check if the coder agent is available and assign them to write a unit test.",
      "contains": "available",
      "description": "Agent 0 should check agent availability and coordinate task assignment"
    },
    {
      "name": "concurrent_work",
      "input": "Have one agent create a Python script while another creates documentation. They should work on the same project.",
      "contains": "concurrent",
      "description": "Multiple agents should be able to work simultaneously on related tasks"
    },
    {
      "name": "conflict_resolution",
      "input": "Two agents are trying to edit the same file. How should this be handled?",
      "contains": "conflict",
      "description": "Agent 0 should handle file conflicts and coordinate agent activities"
    },
    {
      "name": "progress_tracking",
      "input": "What is the progress on all current tasks?",
      "contains": "progress",
      "description": "Agent 0 should track and report progress on all team tasks"
    },
    {
      "name": "dynamic_scaling",
      "input": "This task is taking too long. Spawn an additional agent to help speed it up.",
      "contains": "additional",
      "description": "Agent 0 should be able to dynamically scale the team based on workload"
    },
    {
      "name": "error_handling",
      "input": "One of the agents encountered an error. How should we recover?",
      "contains": "error",
      "description": "Agent 0 should handle team member errors and coordinate recovery"
    },
    {
      "name": "resource_coordination",
      "input": "Multiple agents need to access the same resource. Coordinate access to prevent conflicts.",
      "contains": "coordinate",
      "description": "Agent 0 should coordinate resource access between team members"
    }
  ]
}
