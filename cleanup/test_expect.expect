#!/usr/bin/expect -f

# Expect script for testing Agentry CLI chat mode interactively
# This properly handles the interactive nature of the CLI

set timeout 120
set workspace "/tmp/agentry-test-workspace"

# Create test workspace
system "mkdir -p $workspace"
system "cd $workspace"

proc test_command {cmd description timeout_val} {
    puts "\n=========================================="
    puts "📤 Test: $description"
    puts "Command: $cmd"
    puts "=========================================="
    
    set timeout $timeout_val
    send "$cmd\r"
    
    # Wait for some response indicating processing
    expect {
        timeout {
            puts "⚠️  Timeout waiting for response"
            return
        }
        -re ".*" {
            puts "✅ Got response"
        }
    }
    
    # Give extra time for LLM processing
    sleep 5
}

puts "🧪 Agentry CLI Interactive Test with Expect"
puts "============================================="
puts "📁 Test workspace: $workspace"

# Start the agentry chat session
spawn /home/marco/Documents/GitHub/agentry/agentry.exe chat
expect {
    timeout {
        puts "❌ Failed to start agentry chat"
        exit 1
    }
    -re ".*Agent.*" {
        puts "✅ Agentry chat started successfully"
    }
    -re ".*>" {
        puts "✅ Got prompt, ready for commands"
    }
}

# Test 1: Self-awareness
test_command "What are your capabilities as Agent 0? What tools do you have for team coordination?" \
    "Agent 0 self-awareness" 90

# Test 2: Team status
test_command "What is the current team status? Use the team_status tool." \
    "Team status check" 60

# Test 3: File creation
test_command "Create a file called agent_test_file.txt with the content 'Hello from Agent 0'" \
    "File creation" 90

# Test 4: Agent spawning
test_command "/spawn coder \"Help with coding tasks\"" \
    "Spawn coder agent" 120

# Test 5: List agents
test_command "/list" \
    "List agents" 30

# Test 6: Workspace analysis
test_command "What files are in the current directory?" \
    "Workspace analysis" 60

# Quit the session
puts "\n🔚 Ending session..."
send "/quit\r"
expect eof

puts "\n✅ Interactive test session completed!"
puts "📂 Checking final workspace contents..."
system "ls -la $workspace"
